name: Docker

on:
  push:
    branches:
      - master
    tags:
      - v*

env:
  IMAGE_NAME: docker-image-crossbuild-test/docker-test

jobs:
  build:

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        if: success()
        uses: docker/setup-qemu-action@master
        with:
          platforms: linux/arm/v7
      - name: Set up Docker Buildx
        if: success()
        id: buildx
        uses: docker/setup-buildx-action@master
        with:
          version: latest
      - name: Builder instance name
        if: success()
        run: echo ${{ steps.buildx.outputs.name }}
      - name: Available platforms
        if: success()
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Log into GitHub Container Registry
        if: success()
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Prepare
        if: success()
        id: prepare
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo ::set-output name=docker_image::$IMAGE_ID
          echo ::set-output name=version::$VERSION
      - name: Build and push with buildx
        if: success()
        run: |
          docker buildx build \
          --output type=image,name=${{ steps.prepare.outputs.docker_image }},push=true \
          --platform linux/arm/v7 linux/amd64
          --tag "${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}" \
          --file Dockerfile .
